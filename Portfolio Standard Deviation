import numpy as np

def calculate_portfolio_std_dev(returns, weights):
    """
    Calculate the standard deviation of a portfolio.

    Parameters:
    - returns: List or array of asset returns
    - weights: List or array of asset weights in the portfolio

    Returns:
    - portfolio_std_dev: Standard deviation of the portfolio
    """
    if len(returns) != len(weights):
        raise ValueError("Length of returns and weights must be the same")

    # Convert lists to NumPy arrays for easier computation
    returns = np.array(returns)
    weights = np.array(weights)

    # Calculate portfolio mean return
    portfolio_mean_return = np.dot(returns, weights)

    # Calculate portfolio variance
    portfolio_variance = np.dot(weights, np.dot(np.cov(returns), weights))

    # Calculate portfolio standard deviation
    portfolio_std_dev = np.sqrt(portfolio_variance)

    return portfolio_std_dev

# Example usage:
asset_returns = [0.05, 0.03, 0.02, 0.04]  # Replace with your asset returns
asset_weights = [0.25, 0.35, 0.2, 0.2]  # Replace with your asset weights

portfolio_std_dev = calculate_portfolio_std_dev(asset_returns, asset_weights)
print(f"The standard deviation of the portfolio is: {portfolio_std_dev}")

